service:
  name: rest-api
  namespace: default
  hostName: "${REST_API_HOSTNAME}"
  port: 8000
  image:
    repository: "${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${REST_API_IMAGE_NAME}"
    tag: "${SHA_VERSION}"
  autoscaling:
    minScale: 1
    maxScale: 10
    concurrencyPerPod: 100
  env:
    - name: OP_SERVICE_ACCOUNT_TOKEN
      valueFrom:
        secretKeyRef:
          name: django-rest-api
          key: vault_service_account_token
          optional: false
    - name: OP_VAULT_NAME
      valueFrom:
        secretKeyRef:
          name: django-rest-api
          key: vault_name
          optional: false
    - name: GUNICORN_WORKERS
      value: "2"
    - name: DJANGO_SETTINGS_MODULE
      value: "${DJANGO_SETTINGS_MODULE}"
    - name: OTEL_SERVICE_NAME
      value: "rest-api"
    - name: OTEL_EXPORTER_OTLP_ENDPOINT
      value: "http://datadog-agent:4317"
    - name: OTEL_RESOURCE_ATTRIBUTES
      value: "cloud.provider=digitalocean,deployment.environment=${ENV},service.version=${SHA_VERSION},container.image.name=${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${CELERY_WORKER_IMAGE_NAME},container.image.tag=${SHA_VERSION}"
  resources:
    requests:
      cpu: "1000m"
      memory: "2Gi"
celery:
  scheduler:
    name: celery-scheduler
    namespace: default
    image:
      repository: "${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${CELERY_SCHEDULER_IMAGE_NAME}"
      tag: "${SHA_VERSION}"
    env:
      - name: OP_SERVICE_ACCOUNT_TOKEN
        valueFrom:
          secretKeyRef:
            name: django-rest-api
            key: vault_service_account_token
            optional: false
      - name: OP_VAULT_NAME
        valueFrom:
          secretKeyRef:
            name: django-rest-api
            key: vault_name
            optional: false
      - name: DJANGO_SETTINGS_MODULE
        value: "${DJANGO_SETTINGS_MODULE}"
      - name: OTEL_SERVICE_NAME
        value: "celery-scheduler"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://datadog-agent:4317"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: "cloud.provider=digitalocean,deployment.environment=${ENV},service.version=${SHA_VERSION},container.image.name=${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${CELERY_WORKER_IMAGE_NAME},container.image.tag=${SHA_VERSION}"
    resources:
      requests:
        cpu: "1000m"
        memory: "2Gi"
  flower:
    name: flower
    namespace: default
    hostName: "${FLOWER_HOSTNAME}"
    port: 5555
    image:
      repository: "${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${FLOWER_IMAGE_NAME}"
      tag: "${SHA_VERSION}"
    autoscaling:
      minScale: 1
      maxScale: 10
      concurrencyPerPod: 100
    env:
      - name: OP_SERVICE_ACCOUNT_TOKEN
        valueFrom:
          secretKeyRef:
            name: django-rest-api
            key: vault_service_account_token
            optional: false
      - name: OP_VAULT_NAME
        valueFrom:
          secretKeyRef:
            name: django-rest-api
            key: vault_name
            optional: false
      - name: FLOWER_USER
        valueFrom:
          secretKeyRef:
            name: django-rest-api
            key: flower_user
            optional: false
      - name: FLOWER_PASSWORD
        valueFrom:
          secretKeyRef:
            name: django-rest-api
            key: flower_password
            optional: false
      - name: DJANGO_SETTINGS_MODULE
        value: "${DJANGO_SETTINGS_MODULE}"
      - name: OTEL_SERVICE_NAME
        value: "celery-flower"
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: "http://datadog-agent:4317"
      - name: OTEL_RESOURCE_ATTRIBUTES
        value: "cloud.provider=digitalocean,deployment.environment=${ENV},service.version=${SHA_VERSION},container.image.name=${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${CELERY_WORKER_IMAGE_NAME},container.image.tag=${SHA_VERSION}"
    resources:
      requests:
        cpu: "1000m"
        memory: "2Gi"
  worker:
    name: celery-worker
    namespace: default
    image:
      repository: "${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${CELERY_WORKER_IMAGE_NAME}"
      tag: "${SHA_VERSION}"
    queues:
      - queueName: celery
        autoscaling:
          minScale: 1
          maxScale: 5
          queueLengthTarget: 10
          pollingInterval: 30
          cooldownPeriod: 200
        env:
          - name: OP_SERVICE_ACCOUNT_TOKEN
            valueFrom:
              secretKeyRef:
                name: django-rest-api
                key: vault_service_account_token
                optional: false
          - name: OP_VAULT_NAME
            valueFrom:
              secretKeyRef:
                name: django-rest-api
                key: vault_name
                optional: false
          - name: DJANGO_SETTINGS_MODULE
            value: "${DJANGO_SETTINGS_MODULE}"
          - name: WORKER_POOL
            value: "gevent"
          - name: CONCURRENCY
            value: "100"
          - name: ENABLE_GEVENT_PATCH
            value: "true"
          - name: OTEL_SERVICE_NAME
            value: "celery_worker_queue_celery"
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://datadog-agent:4317"
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "cloud.provider=digitalocean,deployment.environment=${ENV},service.version=${SHA_VERSION},container.image.name=${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${CELERY_WORKER_IMAGE_NAME},container.image.tag=${SHA_VERSION}"
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
      - queueName: io_bound
        autoscaling:
          minScale: 1
          maxScale: 5
          queueLengthTarget: 10
          pollingInterval: 30
          cooldownPeriod: 200
        env:
          - name: OP_SERVICE_ACCOUNT_TOKEN
            valueFrom:
              secretKeyRef:
                name: django-rest-api
                key: vault_service_account_token
                optional: false
          - name: OP_VAULT_NAME
            valueFrom:
              secretKeyRef:
                name: django-rest-api
                key: vault_name
                optional: false
          - name: DJANGO_SETTINGS_MODULE
            value: "${DJANGO_SETTINGS_MODULE}"
          - name: WORKER_POOL
            value: "gevent"
          - name: CONCURRENCY
            value: "100"
          - name: ENABLE_GEVENT_PATCH
            value: "true"
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://datadog-agent:4317"
          - name: OTEL_SERVICE_NAME
            value: "celery_worker_queue_io_bound"
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "cloud.provider=digitalocean,deployment.environment=${ENV},service.version=${SHA_VERSION},container.image.name=${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${CELERY_WORKER_IMAGE_NAME},container.image.tag=${SHA_VERSION}"
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
      - queueName: cpu_bound
        autoscaling:
          minScale: 1
          maxScale: 5
          queueLengthTarget: 10
          pollingInterval: 30
          cooldownPeriod: 200
        env:
          - name: OP_SERVICE_ACCOUNT_TOKEN
            valueFrom:
              secretKeyRef:
                name: django-rest-api
                key: vault_service_account_token
                optional: false
          - name: OP_VAULT_NAME
            valueFrom:
              secretKeyRef:
                name: django-rest-api
                key: vault_name
                optional: false
          - name: DJANGO_SETTINGS_MODULE
            value: "${DJANGO_SETTINGS_MODULE}"
          - name: WORKER_POOL
            value: "prefork"
          - name: CONCURRENCY
            value: "2"
          - name: ENABLE_GEVENT_PATCH
            value: "false"
          - name: OTEL_SERVICE_NAME
            value: "celery_worker_queue_cpu_bound"
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: "http://datadog-agent:4317"
          - name: OTEL_RESOURCE_ATTRIBUTES
            value: "cloud.provider=digitalocean,deployment.environment=${ENV},service.version=${SHA_VERSION},container.image.name=${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${CELERY_WORKER_IMAGE_NAME},container.image.tag=${SHA_VERSION}"
        resources:
          requests:
            cpu: "1000m"
            memory: "2Gi"
webapps:
  - name: "landing"
    namespace: default
    hostName: "${LANDING_HOSTNAME}"
    port: 3000
    image:
      repository: "${DOCKER_REG_URL}/${DOCKER_REG_NAME}/${LANDING_IMAGE_NAME}"
      tag: "${SHA_VERSION}"
    autoscaling:
      minScale: 1
      maxScale: 10
      concurrencyPerPod: 100
    env:
      - name: OP_SERVICE_ACCOUNT_TOKEN
        valueFrom:
          secretKeyRef:
            name: django-rest-api
            key: vault_service_account_token
            optional: false
      - name: OP_VAULT_NAME
        valueFrom:
          secretKeyRef:
            name: django-rest-api
            key: vault_name
            optional: false
    resources:
      requests:
        cpu: "1000m"
        memory: "1Gi"
